/*
Samantha Fisher and Sean Dempsey 
Professor Sheila Oh
CPSC 3300
5/13/18

PROJECT MILESTONE 2
*/

-- Drop tables for our convenience

DROP TABLE IF EXISTS EDUCATIONAL_HIST;
DROP TABLE IF EXISTS EMPLOYMENT_HIST;
DROP TABLE IF EXISTS ENTRANCE_TEST;
DROP TABLE IF EXISTS APPLICATION;
DROP TABLE IF EXISTS APP_RACE;
DROP TABLE IF EXISTS APP_MILITARY_BRANCH;
DROP TABLE IF EXISTS PERSONAL_INFO;
DROP TABLE IF EXISTS TEST_TYPE;
DROP TABLE IF EXISTS RACE;
DROP TABLE IF EXISTS MILITARY_BRANCH;
DROP TABLE IF EXISTS GENDER;
DROP TABLE IF EXISTS STATE;
DROP TABLE IF EXISTS VET_STATUS;
DROP TABLE IF EXISTS APP_INFO;
DROP TABLE IF EXISTS STUDENT_TYPE;
DROP TABLE IF EXISTS TERM;
DROP TABLE IF EXISTS SEASON;
DROP TABLE IF EXISTS DEGREE;
DROP TABLE IF EXISTS DEGREE_TYPE;
DROP TABLE IF EXISTS COLLEGE;
DROP TABLE IF EXISTS APPLICANT;

-- Create all the parent tables
CREATE TABLE APPLICANT (
	APPLICANT_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	EMAIL VARCHAR(50) NOT NULL UNIQUE,
	PASSWORD_HASH CHAR (64) NOT NULL
);

CREATE TABLE COLLEGE (
	COL_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	COL_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE DEGREE_TYPE (
	DEG_TYPE_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	DEG_DESC VARCHAR(30) NOT NULL
);

CREATE TABLE DEGREE (
	DEG_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	DEG_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE SEASON (
      SEASON_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
      SEASON_DESC VARCHAR (50) NOT NULL
);

CREATE TABLE TERM (
	TERM_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	TERM_YEAR INT NOT NULL,
	SEASON_ID INT NOT NULL,
	FOREIGN KEY(SEASON_ID) REFERENCES SEASON(SEASON_ID) ON UPDATE CASCADE
);

CREATE TABLE STUDENT_TYPE (
	STU_TYPE_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	STU_TYPE_DESC VARCHAR (50) NOT NULL
);

CREATE TABLE APP_INFO (
	APP_INFO_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	FIN_AID ENUM('Yes', 'No') NOT NULL,
	EMP_TUITION ENUM('Yes', 'No') NOT NULL,
	OTHER_PROGRAMS ENUM('Yes', 'No') NOT NULL,
	FELONY ENUM('Yes', 'No') NOT NULL,
	ACADEMIC_PROBATION ENUM('Yes', 'No') NOT NULL
);

CREATE TABLE VET_STATUS (
	VET_TYPE_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	VET_TYPE_DESC CHAR(50) NOT NULL
);

CREATE TABLE STATE (
	STATE_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	STATE_CODE CHAR(2) NOT NULL
);

CREATE TABLE GENDER (
	GENDER_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	GENDER_DESC VARCHAR(15) NOT NULL
);

CREATE TABLE MILITARY_BRANCH (
	BRANCH_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	BRANCH_DESC VARCHAR(30) NOT NULL
);

CREATE TABLE RACE (
	RACE_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	RACE_DESC VARCHAR(30) NOT NULL
);

CREATE TABLE TEST_TYPE (
	TEST_TYPE_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	TEST_DESC VARCHAR(30)
);

-- Create all the child tables
CREATE TABLE PERSONAL_INFO (
	PERS_INFO_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	FIRST_NAME VARCHAR (30) NOT NULL,
	LAST_NAME VARCHAR (30) NOT NULL,
	PREF_FIRST_NAME VARCHAR (30),
	BIRTH_DATE DATE NOT NULL,
	PHONE CHAR(11) NOT NULL,
	US_CITIZEN ENUM('Yes', 'No') NOT NULL,
	ENG_NATIVE ENUM('Yes', 'No') NOT NULL,
	HISP_LAT ENUM('Yes', 'No')  NOT NULL,
	ADDRESS VARCHAR (100) NOT NULL,
	CITY VARCHAR (30) NOT NULL,
	ZIPCODE CHAR(5) NOT NULL,
	STATE_ID INT NOT NULL,
	VET_TYPE_ID INT NOT NULL,
	GENDER_ID INT NOT NULL,
	FOREIGN KEY(STATE_ID) REFERENCES STATE(STATE_ID) ON UPDATE CASCADE,
	FOREIGN KEY(VET_TYPE_ID) REFERENCES VET_STATUS(VET_TYPE_ID) ON UPDATE CASCADE,
	FOREIGN KEY(GENDER_ID) REFERENCES GENDER(GENDER_ID) ON UPDATE CASCADE
);

CREATE TABLE APP_MILITARY_BRANCH (
	APP_MILITARY_BRANCH_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	PERS_INFO_ID INT NOT NULL,
	BRANCH_ID INT NOT NULL,
	FOREIGN KEY(PERS_INFO_ID) REFERENCES PERSONAL_INFO(PERS_INFO_ID) ON UPDATE CASCADE,
	FOREIGN KEY(BRANCH_ID) REFERENCES MILITARY_BRANCH(BRANCH_ID) ON UPDATE CASCADE
);

CREATE TABLE APP_RACE (
	APP_RACE_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	PERS_INFO_ID INT NOT NULL,
	RACE_ID INT NOT NULL,
	FOREIGN KEY(PERS_INFO_ID) REFERENCES PERSONAL_INFO(PERS_INFO_ID) ON UPDATE CASCADE,
	FOREIGN KEY(RACE_ID) REFERENCES RACE(RACE_ID) ON UPDATE CASCADE
);

CREATE TABLE APPLICATION (
	APP_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	COL_ID INT NOT NULL,
	DEG_ID INT NOT NULL,
	DEG_TYPE_ID INT NOT NULL,
	APPLICANT_ID INT NOT NULL,
	TERM_ID INT NOT NULL,
	STU_TYPE_ID INT NOT NULL,
	PERS_INFO_ID INT NOT NULL,
	APP_INFO_ID INT NOT NULL,
	FOREIGN KEY(COL_ID) REFERENCES COLLEGE(COL_ID) ON UPDATE CASCADE,
	FOREIGN KEY(DEG_ID) REFERENCES DEGREE(DEG_ID) ON UPDATE CASCADE,
	FOREIGN KEY(DEG_TYPE_ID) REFERENCES DEGREE_TYPE(DEG_TYPE_ID) ON UPDATE CASCADE,
	FOREIGN KEY(APPLICANT_ID) REFERENCES APPLICANT(APPLICANT_ID) ON UPDATE CASCADE,
	FOREIGN KEY(TERM_ID) REFERENCES TERM(TERM_ID) ON UPDATE CASCADE,
	FOREIGN KEY(STU_TYPE_ID) REFERENCES STUDENT_TYPE(STU_TYPE_ID) ON UPDATE CASCADE,
	FOREIGN KEY(PERS_INFO_ID) REFERENCES PERSONAL_INFO(PERS_INFO_ID) ON UPDATE CASCADE,
	FOREIGN KEY(APP_INFO_ID) REFERENCES APP_INFO(APP_INFO_ID) ON UPDATE CASCADE
);

CREATE TABLE ENTRANCE_TEST (
	ENTRANCE_TEST_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	APP_ID INT NOT NULL,
	TEST_TYPE_ID INT NOT NULL,
	TEST_MONTH INT NOT NULL,
	TEST_YEAR INT NOT NULL,
	FOREIGN KEY(APP_ID) REFERENCES APPLICATION(APP_ID) ON UPDATE CASCADE,
	FOREIGN KEY(TEST_TYPE_ID) REFERENCES TEST_TYPE(TEST_TYPE_ID) ON UPDATE CASCADE
);

CREATE TABLE EMPLOYMENT_HIST (
	EMP_HIST_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	APP_ID INT NOT NULL,
	EMPLOYER VARCHAR(30) NOT NULL,
	PHONE CHAR (11) NOT NULL,
	ADDRESS VARCHAR (100) NOT NULL,
	CITY VARCHAR (30) NOT NULL,
	ZIPCODE CHAR(5) NOT NULL,
	STATE_ID INT NOT NULL,
	START_MONTH INT NOT NULL,
	START_YEAR INT NOT NULL,
	END_MONTH INT,
	END_YEAR INT,
	CURRENT_EMP ENUM('Yes', 'No') NOT NULL,
	JOB_TITLE VARCHAR(30) NOT NULL,
	PART_TIME ENUM('Part-time', 'Full-time') NOT NULL,
	FOREIGN KEY(APP_ID) REFERENCES APPLICATION(APP_ID) ON UPDATE CASCADE
);

CREATE TABLE EDUCATIONAL_HIST (
	EDU_HIST_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	APP_ID INT NOT NULL,
	INSTITUTION VARCHAR(30) NOT NULL,
	START_MONTH INT NOT NULL,
	START_YEAR INT NOT NULL,
	END_MONTH INT,
	END_YEAR INT,
	DEG_EARNED INT NOT NULL,
	MAJOR VARCHAR(30) NOT NULL,
	DEG_RECV_DATE DATE,
	FOREIGN KEY(APP_ID) REFERENCES APPLICATION(APP_ID) ON UPDATE CASCADE,
      FOREIGN KEY(DEG_EARNED) REFERENCES DEGREE_TYPE(DEG_TYPE_ID) ON UPDATE CASCADE
);

-- Insert data into our "enum" tables
INSERT INTO COLLEGE(COL_NAME) VALUES
('College of Science and Engineering'),
('Albers School of Business'),
('College of Arts and Sciences'),
('College of Education'),
('College of Nursing'),
('School of Theology and Ministry');

INSERT INTO STUDENT_TYPE(STU_TYPE_DESC) VALUES
('Graduate'),
('Graduate Non-Matriculated'),
('Graduate Readmission');

INSERT INTO DEGREE_TYPE(DEG_DESC) VALUES
('Certificates'),
('Master''s');

INSERT INTO DEGREE(DEG_NAME) VALUES
('Certificate in Computer Science Fundamentals'),
('Certificate in Software Architecture and Design'),
('Certificate in Software Project Management'),
('Master of Science in Computer Science'),
('Master of Science in Mechanical Engineering'),
('Master of Science in Structural Engineering');

INSERT INTO SEASON(SEASON_DESC) VALUES
('Winter quarter (January)'),
('Spring quarter (March)'),
('Summer quarter (June)'),
('Fall quarter (September)');

INSERT INTO TERM(TERM_YEAR, SEASON_ID) VALUES
(2018, 3),
(2018, 4),
(2019, 1),
(2019, 2),
(2019, 3),
(2019, 4),
(2020, 1),
(2020, 2),
(2020, 3),
(2020, 4);

INSERT INTO VET_STATUS(VET_TYPE_DESC) VALUES
('Not a veteran'),
('Currently serving'),
('Previously served'),
('Current dependent');

INSERT INTO MILITARY_BRANCH(BRANCH_DESC) VALUES
('Army'),
('Marine Corp'),
('Navy'),
('Air Force'),
('Coast Guard');

INSERT INTO RACE(RACE_DESC) VALUES
('Asian'),
('Black/African American'),
('Native Hawaiian/Pacific Islander'),
('Native American/Native Indian'),
('White/Middle Eastern');

INSERT INTO TEST_TYPE(TEST_DESC) VALUES
('CBEST'),
('GMAT'),
('GRE General'),
('IELTS'),
('MAT'),
('PRAXIS'),
('TOEFL'),
('WEST-B'),
('WEST-E');

INSERT INTO GENDER(GENDER_DESC) VALUES
('Male'),
('Female'),
('Other');

INSERT INTO STATE(STATE_CODE) VALUES
('AL'), ('AK'), ('AZ'), ('AR'), ('CA'),
('CO'), ('CT'), ('DE'), ('DC'), ('FL'),
('GA'), ('HI'), ('ID'), ('IL'), ('IN'),
('IA'), ('KS'), ('KY'), ('LA'), ('ME'),
('MD'), ('MA'), ('MI'), ('MN'), ('MS'),
('MO'), ('MT'), ('NE'), ('NV'), ('NH'),
('NJ'), ('NM'), ('NY'), ('NC'), ('ND'),
('OH'), ('OK'), ('OR'), ('PA'), ('RI'),
('SC'), ('SD'), ('TN'), ('TX'), ('UT'),
('VT'), ('VA'), ('WA'), ('WV'), ('WI'),
('WY'), ('AS'), ('GU'), ('MP'), ('PR'),
('VI');
